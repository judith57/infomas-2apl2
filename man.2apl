beliefs:
  acquirePC(pc) :- not needPC(N,C,M,P,G).
  contractors([bol, amazon, dumpsterdiver]).
  needPC(1,'Antec Performance II SX630II', 'Asustek A7N8X Deluxe Motherboard',
  'Intel Pentium III', 'ATI RADEON 7000 Graphics card').

beliefupdates:

goals:
  acquirePC(pc).

plans:

pgrules:
  % If there is a PC needed, add part-needs
  acquirePC(pc) <- needPC(N,C,M,P,G) |
  {
    % Broadcast cycle
    if B(not gotC(C)){
      % Broadcast chassis request
      B(contractors(CONTS));
      broadcast(CONTS, C);
    }
    if B(not gotM(M)){
      % Broadcast motherboard request
      B(contractors(CONTS));
      broadcast(CONTS, M);
    }
    if B(not gotP(P)){
      % Broadcast processor request
      B(contractors(CONTS));
      broadcast(CONTS, P);
    }
    if B(not gotG(G)){
      % Broadcast GFX request
      B(contractors(CONTS));
      broadcast(CONTS, G);
    }
    
    % Computation cycle
    if B(not gotC(C)){
      % Compute best chassis offer
      getBest(C);
    }
    if B(not gotM(M)){
      % Compute best motherboard offer
      getBest(M);
    }
    if B(not gotP(P)){
      % Compute best processor offer
      getBest(P);
    }
    if B(not gotG(G)){
      % Compute best GFX offer
      getBest(G);
    }
  }

pcrules:
  % Broadcast component request to all contractors
  % Takes list of contractors and item needed
  broadcast(CONTS, ITEM) <- true |
  {
    if B( CONTS = [NAME|REST] ){
      send(NAME, request, need(ITEM));
      broadcast(REST, ITEM);
    }
  }
  
  % Handle incoming price information
  message(N, inform, La, On, got(X,P)) <- true |
  {
    +offer(X,N,P);
  }

  % Compute best offer
  % Takes item to compare offers on
  getBest(X) <- true |
  {
    if B(offer(X,N,P)) {
      if B(bestOffer(X,BN,BP)){
        if(P < BP){
          -bestOffer(X,BN,BP);
          +bestOffer(X,N,P);
          -offer(X,N,P);
        }
        else{
          -offer(X,N,P);
        }
      }
      else{
        +bestOffer(X,N,P);
        -offer(X,N,P);
      }
      getBest(X);
    }
  }

prrules:
